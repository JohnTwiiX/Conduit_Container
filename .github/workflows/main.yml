name: Update Repositories

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  update_compose_setup:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Generate deployment date
        id: date
        run: echo "DATE=$(date +'%d%m%Y%H%M')" >> $GITHUB_ENV

      - name: Rename docker-compose file with the current date
        run: mv docker-compose.yml docker-compose-${{ env.DATE }}.yml

      - name: SCP docker-compose file to the server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: docker-compose-${{ env.DATE }}.yml
          target: /tmp/

      - name: SSH into the server and deploy the main repository
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Create project directory if it doesn't exist
            mkdir -p ${{ secrets.PROJECT_PATH }}
              
            # Navigate to the project directory
            cd ${{ secrets.PROJECT_PATH }}

            # Delete old docker-compose file
            rm -f docker-compose.yml
            mv /tmp/docker-compose-${{ env.DATE }}.yml docker-compose.yml

  create_env_file:
    runs-on: ubuntu-latest
    needs: update_compose_setup

    steps:
      - name: create file
        run: |
          cat <<EOT > .env
          DJANGO_SUPERUSER_USERNAME=${{ vars.DJANGO_SUPERUSER_USERNAME }}
          DJANGO_SUPERUSER_PASSWORD=${{ vars.DJANGO_SUPERUSER_PASSWORD }}
          DJANGO_SUPERUSER_EMAIL=${{ vars.DJANGO_SUPERUSER_EMAIL }}
          API_URL=${{ vars.API_URL }}
          EOT

      - name: Check .env file existence
        run: ls -l .env

      - name: SCP .env file to the server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: .env
          target: ${{secrets.PROJECT_PATH}}

  trigger_frontend:
    runs-on: ubuntu-latest
    needs: update_compose_setup

    steps:
      - name: Trigger Downstream for frontend
        uses: peter-evans/repository-dispatch@v2
        with:
          repository: JohnTwiiX/conduit-frontend
          token: ${{ secrets.PAT }}
          event-type: trigger-build

  trigger_backend:
    runs-on: ubuntu-latest
    needs: update_compose_setup

    steps:
      - name: Trigger Downstream for backend
        uses: peter-evans/repository-dispatch@v2
        with:
          repository: JohnTwiiX/conduit-backend
          token: ${{ secrets.PAT }}
          event-type: trigger-build
